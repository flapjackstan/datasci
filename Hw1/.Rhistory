WHEN "LIST PRICE" > 20000000 THEN 1
ELSE 0
END AS "HIGH"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE HIGH" from
(select "TOTAL HIGH" as "KEY", count(1) as "VALUE" from transform_cte where "HIGH" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
summary(real_estate_df)
sqldf('select stdev("LIST PRICE") from real_estate_df')
import(ggplot2)
library(ggplot2)
# Basic histogram
ggplot(real_estate_df, aes(x="LIST PRICE")) + geom_histogram()
# Change the width of bins
ggplot(real_estate_df, aes(x="LIST PRICE")) +
geom_histogram(binwidth=1)
# Change the width of bins
ggplot(real_estate_df, aes(x="LIST PRICE")) +
geom_histogram(binwidth=15)
# Change the width of bins
ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(binwidth=15)
# Basic histogram
ggplot(real_estate_df, aes(x=`LIST PRICE`)) + geom_histogram()
# Change the width of bins
ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(binwidth=15)
# Change the width of bins
ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(binwidth=2)
# Basic histogram
ggplot(real_estate_df, aes(x=`LIST PRICE`)) + geom_histogram()
# Basic histogram
p<-ggplot(df, aes(x=weight)) +
geom_histogram(color="black", fill="white")
p
# Basic histogram
p<-ggplot(df, aes(x=`LIST PRICE`)) +
geom_histogram(color="black", fill="white")
p
# Basic histogram
p<-ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(color="black", fill="white")
p
# Change colors
p<-ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(color="black", fill="white")
p
p+ geom_vline(aes(xintercept=mean(weight)),
color="blue", linetype="dashed", size=1)
p+ geom_vline(aes(xintercept=mean(`LIST PRICE`)),
color="blue", linetype="dashed", size=1)
# Histogram with density plot
ggplot(df, aes(x=`LIST PRICE`)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
# Change colors
p<-ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(color="black", fill="white")
p
p+ geom_vline(aes(xintercept=mean(`LIST PRICE`)),
color="blue", linetype="dashed", size=1)
# Histogram with density plot
ggplot(real_estate_df, aes(x=`LIST PRICE`)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
View(real_estate_df)
View(real_estate_df)
sqldf('with transform_cte as
(select
"LIST PRICE",
CASE
WHEN "HOME TYPE" = "Single Family Residential" THEN 1
ELSE 0
END AS "SFF"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE SFF" from
(select "TOTAL SFF" as "KEY", count(1) as "VALUE" from transform_cte where "SFF" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
real_estate_df %>% filter(`HOME TYPE` = "HOME TYPE")
real_estate_df %>% filter(`HOME TYPE` == "HOME TYPE")
real_estate_df %>% filter(`HOME TYPE` == "Single Family Residential")
dim(real_estate_df)
134/217
real_estate_df %>% filter(`HOME TYPE` != "Single Family Residential")
63/217
sqldf('select count("HOME TYPE"), "HOME COUNT" from real_estate_df group by "HOME TYPE" ')
sqldf('select count("HOME TYPE") as count, "HOME COUNT" from real_estate_df group by "HOME TYPE" ')
sqldf('select count("HOME TYPE") as count, "HOME TYPE" from real_estate_df group by "HOME TYPE" ')
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE" ')
sqldf('with transform_cte as
(select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE")
select 144/sum(count)')
sqldf('with transform_cte as
(select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE")
select 144/sum(count) from transform_cte')
sqldf('with transform_cte as
(select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE")
select 144*1.0/sum(count) from transform_cte')
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE"')
sqldf('
DECLARE @SFF_COUNT AS INT()
SELECT @SFF_COUNT=count("HOME TYPE")
FROM from real_estate_df
WHERE "HOME TYPE" = "Single Family Residential"
PRINT SFF_COUNT
')
sqldf('
DECLARE @SFF_COUNT AS INT()
SELECT @SFF_COUNT=count("HOME TYPE")
FROM from real_estate_df
WHERE "HOME TYPE" = "Single Family Residential"
PRINT @SFF_COUNT
')
sqldf('with transform_cte as
(select
"LIST PRICE",
CASE
WHEN "HOME TYPE" = "Single Family Residential" THEN 1
ELSE 0
END AS "SFF"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE SFF" from
(select "TOTAL SFF" as "KEY", count(1) as "VALUE" from transform_cte where "SFF" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE"')
144/144+73
144/144+73
144+73
144/217
144/(144+73)
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE"')
real_estate_df
sqldf('select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION"')
sqldf('select "LOCATION", count("LOCATION") as count, count("LOCATION")/sum(count)  as count from real_estate_df group by "LOCATION"')
sqldf('select "LOCATION", count("LOCATION") as count, count("LOCATION")/sum(count) from real_estate_df group by "LOCATION"')
sqldf('select "LOCATION", count("LOCATION") as count, count("LOCATION")/sum(count("LOCATION")) from real_estate_df group by "LOCATION"')
sqldf('select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION"')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, (0.0+n)/(COUNT(*) OVER (PARTITION BY LOCATION)) from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, (0.0+count)/(COUNT(*) OVER (PARTITION BY LOCATION)) from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, (0.0+count)/(sum(count))) from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, (0.0+count)/(sum(count)) from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, (0.0+count)/(sum(count) OVER (PARTITION BY LOCATION)) from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, count/sum(count) from transform_cte group by "LOCATION')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select *, count/sum(count) from transform_cte group by "LOCATION"')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select * from (select *, sum(count) as total from transform_cte)')
sqldf('with transform_cte as
(select "LOCATION", count("LOCATION") as count from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) * 100.0 / sum(count(*)) Over() as "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df)
select * from transform_cte')
sqldf('with transform_cte as
(select count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df)
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION, count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION, count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df)
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) * 100.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) Over() as "LOCATION" as "test" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) as "percentage" Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) as Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) Over() as "LOCATION" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION", count(*) *1.0 / sum(count(*)) Over() as "percentage" from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select "LOCATION",count("LOCATION") as count, count(*) *1.0 / sum(count(*)) Over() as "percentage" from real_estate_df group by "LOCATION")
select * from transform_cte')
132/(132+11+74)
sqldf('with transform_cte as
(select
"LOCATION",
count("LOCATION") as count,
sum(count(*)) as "total",
count(*) *1.0 / sum(count(*)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count("LOCATION") as count,
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) as "total" Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
count(1) * 1.0 / sum(count(1)) Over() as "percentage",
sum(count(1)) as total
from real_estate_df group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
count(1) * 1.0 / sum(count(1)) Over() as "percentage",
sum(count(1))  Over() as "total"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage",
from real_estate_df
group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / "total" as "percentage"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE"')
sqldf('with transform_cte as
(select
"HOME TYPE",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "HOME TYPE")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LIST PRICE",
CASE
WHEN "HOME TYPE" = "Single Family Residential" THEN 1
ELSE 0
END AS "SFF"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE SFF" from
(select "TOTAL SFF" as "KEY", count(1) as "VALUE" from transform_cte where "SFF" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
sqldf('with transform_cte as
(select
"HOME TYPE",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "HOME TYPE")
select * from transform_cte')
real_estate_df %>% group_by(`HOME TYPE`, `LOCATION`) %>% summarize(count_by_siteyear =  n(),
mean_size_mm = mean(size_mm, na.rm = TRUE),
sd_size_mm = sd(size_mm, na.rm = TRUE),
median_size_mm = median(size_mm, na.rm = TRUE))
real_estate_df %>% group_by(`HOME TYPE`, `LOCATION`) %>% summarize(count_by_siteyear =  n())
library(pivottabler)
install.packages(pivottabler)
install.packages('pivottabler')
real_estate_df %>% group_by(`HOME TYPE`) %>% summarize(count =  n())
hpvt(real_estate_df, "HOME_TYPE", "LOCATION", "n()")
qhpvt(real_estate_df, "HOME_TYPE", "LOCATION", "n()")
library(pivottabler)
qhpvt(real_estate_df, "HOME_TYPE", "LOCATION", "n()")
real_estate_df
qhpvt(real_estate_df, `HOME_TYPE`, "LOCATION", "n()")
qhpvt(real_estate_df, `HOME_TYPE`, `LOCATION`, "n()")
qhpvt(real_estate_df, c("HOME_TYPE"), c("LOCATION"), "n()")
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()")
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/Total")
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()")
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/217")
count(real_estate_df)
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)")
count(real_estate_df)
dim(real_estate_df)
dim(real_estate_df)[0]
dim(real_estate_df)
length(real_estate_df)
width(real_estate_df)
count(real_estate_df)
count(real_estate_df)[0]
n(real_estate_df)
count(real_estate_df)
count(real_estate_df):
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/217")
count(real_estate_df)
temp <- count(real_estate_df)
temp <- count(real_estate_df)[[1]]
temp <-
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]")
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]")
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.0f", "%.1f"))
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.0f"))
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.2f"))
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()")
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
real_estate_df %>% filter("LOCATION" == 'Beverly Hills')
real_estate_df %>% filter("LOCATION" == "Beverly Hills")
real_estate_df %>% filter(`LOCATION` == "Beverly Hills")
real_estate_df %>% filter(`LOCATION` == "Beverly Hills" %>% summary()
real_estate_df %>% filter(`LOCATION` == "Beverly Hills" %>% summary()
real_estate_df %>% filter(`LOCATION` == "Beverly Hills")
real_estate_df %>% filter(`LOCATION` == "Beverly Hills") %>% summary()
real_estate_df %>% filter(`LOCATION` == "Beverly Hills") %>% select(`SQFT`) %>%  sd()
beverly_hills_df %>% filter(`LOCATION` == "Beverly Hills")
beverly_hills_df <- real_estate_df %>% filter(`LOCATION` == "Beverly Hills")
bh_df <- real_estate_df %>% filter(`LOCATION` == "Beverly Hills")
dtla_df <- real_estate_df %>% filter(`LOCATION` == "Downtown Los Angeles")
sm_df <- real_estate_df %>% filter(`LOCATION` == "Santa Monica")
library(tidyverse)
library(ggplot2)
library(sqldf)
library(pivottabler)
# read and quick print of 5 observations
real_estate_df <- read_csv('../data/LA Real Estate.csv')
summary(real_estate_df)
radiant()
radiant::radiant()
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.2f"))
library(tidyverse)
library(ggplot2)
library(sqldf)
library(pivottabler)
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.2f"))
sqldf('select avg("LIST PRICE") from real_estate_df')
library(tidyverse)
library(ggplot2)
library(sqldf)
library(pivottabler)
# read and quick print of 5 observations
real_estate_df <- read_csv('../data/LA Real Estate.csv')
summary(real_estate_df)
sqldf('select max("LIST PRICE") - min("LIST PRICE") as "range" from real_estate_df')
IQR(real_estate_df$`LIST PRICE`)
# b
sqldf('with transform_cte as
(select
"LIST PRICE",
CASE
WHEN "LIST PRICE" > 20000000 THEN 1
ELSE 0
END AS "HIGH"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE HIGH" from
(select "TOTAL HIGH" as "KEY", count(1) as "VALUE" from transform_cte where "HIGH" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
kurtosis(real_estate_df$`LIST PRICE`, type=2)
library(e1071) #skewness and kurtosis
kurtosis(real_estate_df$`LIST PRICE`, type=2)
skewness(real_estate_df$`LIST PRICE`, type=2)
skewness(real_estate_df$`LIST PRICE`, type=1)
2
skewness(real_estate_df$`LIST PRICE`, type=2)
kurtosis(real_estate_df$`LIST PRICE`, type=2)
sqldf('with transform_cte as
(select
"LIST PRICE",
CASE
WHEN "HOME TYPE" = "Single Family Residential" THEN 1
ELSE 0
END AS "SFF"
from real_estate_df)
select min("VALUE" * 1.0) / max("VALUE") as "PERCENTAGE SFF" from
(select "TOTAL SFF" as "KEY", count(1) as "VALUE" from transform_cte where "SFF" = 1
union
select "TOTAL" as "KEY", count(1) as "VALUE" from transform_cte)')
sqldf('select "HOME TYPE", count("HOME TYPE") as count from real_estate_df group by "HOME TYPE"')
sqldf('with transform_cte as
(select
"HOME TYPE",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "HOME TYPE")
select * from transform_cte')
sqldf('with transform_cte as
(select
"LOCATION",
count(1) as count,
sum(count(1)) Over() as "total",
count(1) * 1.0 / sum(count(1)) Over() as "percentage"
from real_estate_df
group by "LOCATION")
select * from transform_cte')
# h
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()/count(real_estate_df)[[1]]", formats=list("%.2f"))
qhpvt(real_estate_df, c("HOME TYPE"), c("LOCATION"), "n()")
radiant::radiant()
radiant::radiant()
radiant::radiant()
