---
title: "Allianz: Is Simplicity the Way Forward?"
description: "Allianz CLV Study"
author: "Elmer Camargo"
date: "11/04/22"
abstract-title: "TLDR: Would a simple plan work for multiple countries?"
abstract: "this is my abstract. Shit is fucked"
title-block-banner: true

format: 
  html:
    code-fold: false
    theme: cosmo
editor: visual
---

```{r}
#| echo: false
#| output: false
library(tidyverse)
library(glue)
library(FinancialMath)
```

## Brief Intro

Allianz is an insurance company in Europe that is facing a difficult decision - . 

## Analysis Description

This analysis will go over profit scenarios for four countries. Germany, France, Spain, and Italy.


```{r}
#| code-fold: true
#| code-summary: Functions Used in Analysis
#| code-overflow: wrap

getRetentionRate <- function(churn) {
  # returns retention rate given a churn percentage
  ret <- 1 - churn
  return(ret)
}


getCashPerCustomer <- function(total_cash, count_customers) {
  # returns an average numbers spent by cohort of customers
  cash_per_customer <- total_cash / count_customers
  return(cash_per_customer)
}

getProfitPerCustomer <- function(cash_per_customer, profit_margin) {
  # returns an average profit provided by cohort of customers
  profit_per_customer <- cash_per_customer * profit_margin
  return(profit_per_customer)
}

getCLV <- function(profit_per_customer, discount_rate, retention_rate) {
  # returns Customer Lifetime Value for cohort of customers
  clv <- profit_per_customer / (1 + (discount_rate - retention_rate))
  return(clv)
}

createScenerio <- function(revenue, customers, lost, new, churn_rate, profit_margin, discount_rate) {
  # returns a dictionary with necessary variables to calculate different values for the analysis
  data <- {}
  
  data['revenue'] <- revenue
  data['customers'] <- customers
  data['lost'] <- lost
  data['new'] <- new
  
  # provided calculations 
  
  data['churn_rate'] <- churn_rate # No clue how they came up with this.
  data['profit_marigin'] <- profit_margin
  data['discount_rate'] <- discount_rate
  
  # calculated variables
  data['retention_rate'] <- getRetentionRate(data['churn_rate'])
  data['cash_per_customer'] <- getCashPerCustomer(data['revenue'], data['customers'])
  data['profit_per_customer'] <- getProfitPerCustomer(data['cash_per_customer'], data['profit_marigin'])
  data['clv'] <- getCLV(data['profit_per_customer'], data['discount_rate'], data['retention_rate'])
  
  return(data)
}

createProfitScenerio <- function(existing_clv, new_clv, discount_rate, current_customers, new_customers_per_year) {
  # returns a dictionary with necessary variables to calculate different values for the analysis
  data <- {}
  
  data['value_of_current_base'] <- existing_clv * current_customers
  
  df <- tibble(time = c(1:10), 
                      cashflow =rep(new_clv * new_customers_per_year, 10), 
                      discount_rate = rep(discount_rate, 10))
  
  df <- df %>% mutate(present_value = cashflow / (1+discount_rate)^time)
  
  data["cashflows"] <- list(df)
  
  data["npv_of_future_customers"] <- df %>% 
    select(present_value) %>% 
    sum()
  
  data["total_value_of_customers"] <- as.numeric(data["npv_of_future_customers"]) + as.numeric(data["value_of_current_base"])

  
  return(data)
}


```

## Single Analysis Example: Germany

This is an example analysis for current total value for Germany that will be replicated for the three other countries. In addition to current scenarios, the analysis will include profit scenarios that take into account churn increase and decrease.


```{r}
case_rev <- 6296000000
case_cust <- 6558000
case_lost <- 771000
case_new <- 574000
case_churn <- .114
case_pm <- .3
case_dr <- .1

case_new_customers_per_year <- 600000
```

Current Scenario

```{r}
#| code-overflow: scroll
current <- createScenerio(revenue = case_rev, customers=case_cust,
                          lost=case_lost, new=case_new, churn_rate=case_churn,
                          profit_margin=case_pm, discount_rate=case_dr)

current_scenario <- createProfitScenerio(current["clv"], current["clv"], case_dr, current['customers'], case_new_customers_per_year)
```

::: {.panel-tabset}

## Code
```{r}
#| echo: fenced
#| eval: false

current_scenario["value_of_current_base"]
```

## Output: Value of Current Customers
```{r}
#| echo: false
#| eval: true
current_scenario["value_of_current_base"]
```

:::

::: {.panel-tabset}

## Value of future customers
```{r}
#| echo: fenced
#| eval: true
current_scenario["npv_of_future_customers"]
```

## Cashflows
```{r}
#| echo: false
#| eval: true

current_scenario["cashflows"]
```

:::

```{r}
current_scenario["total_value_of_customers"]
```

The above then gets repeated with an increment and decrement in churn by 2%

### Churn Increase/Decrease Scenario

```{r}
scenerio_1 <- createScenerio(revenue = case_rev, customers=case_cust,
                             lost=case_lost, new=case_new, churn_rate=case_churn + .02,
                             profit_margin=case_pm, discount_rate=case_dr)

scenerio_2 <- createScenerio(revenue = case_rev, customers=case_cust,
                             lost=case_lost, new=case_new, churn_rate=case_churn - .02,
                             profit_margin=case_pm, discount_rate=case_dr)
```

### Profit Scenario 1

```{r}
profit_scenario_1 <- createProfitScenerio(scenerio_1["clv"], current["clv"], case_dr, current['customers'], case_new_customers_per_year)

profit_scenario_1["total_value_of_customers"]
```

### Profit Scenario 2

```{r}
profit_scenario_2 <- createProfitScenerio(scenerio_1["clv"], current["clv"], case_dr, current['customers'], case_new_customers_per_year + 100000)

profit_scenario_2["total_value_of_customers"]
```

### Profit Scenario 3

```{r}
profit_scenario_3 <- createProfitScenerio(scenerio_1["clv"], scenerio_2["clv"], case_dr, current['customers'], case_new_customers_per_year + 100000)

profit_scenario_3["total_value_of_customers"]
```

:::{.callout-note}
This scenario is an aggregated analysis for Germany and is a sum of split markets including: Agents, Brokers, Aggregators, etc..
:::

## Analysis

:::{.callout-important}
This is provided data from the case in 2018. Below variables are initial values and can be adjusted. 
:::





## Quarto is fun

```{css echo=FALSE}
.mycss {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width:45%;
  height:auto;
}
```



::: {.mycss}

![](markdown.jpg)

:::
